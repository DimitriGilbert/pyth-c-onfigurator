<?xml version="1.0" encoding="UTF-8"?>
<softs>
	<soft name="">
	<!--
	contient toutes les instruction pour l'install d'un soft
	-->
		<raw id="" ask="" error="" excpect="" default="" value="" out=""/>
		<!--
		pour les raw_input
		id : le nom de la variable dans le dico install_var
		ask : question a afficher
		error : message ernvoyer si incorrect, laisser vide si inutile
		excpect : expression regulier, retourne error si trouve un match, laisser vide si inutile
		default : valeur par default si validatio vide, laisser vide pour que error soit renvoyer si validation vide
		value : valeur de reponse, skip le raw_input si remplis
		-->
		<loop>
			<if ask="" excpect="" type="" value="">
			liste de noeuds
			</if>
			<elseif excpect="" type="">
			liste de noeud
			</elsif>
			<else>
			liste de noeud
			</else>
			<while ask="" start="" type="">
			liste de noeuds
			</while>
		</loop>
		<!--
		if:
			ask : question a afficher
			excpect : valeur de reference
			type : = si vide, < , >, <=, >=, != definie le type de comparaison
			value : valeur de reponse, skip le raw_input si remplis
		elseif:
			si la premiere condition n'est pas respecter, check les conditions des elseif s'arrete quand une condition convient
		else:
			si aucune condition if ou elseif n'est remplies
			
		while:
			ask : question a afficher
			start : valeur de depart de la boucle, 0 si vide
			type : = si vide, < , >, <=, >=, != definie le type de comparaison
			boucle sur la liste de noeud entre start et la reponse a ask
		
		liste de noeud : commande pour pyth(c)onfigurator
		-->
		<download file_path="">
			<url>your url</url>
		</download>
		<!--
		telecharge un fichier depuis internet a l'url 
		file_path : chemin local du fichier
		your url : chaine de caractere en base64
		-->
		<apt out="">
			<apt_soft name=""/>
		</apt>
		<!--
		execute une commande apt-get install -y apt_soft[name]...
		entrez un noeud apt_soft avec l'attribut name contenant le nom du soft a installer
		-->
		<apt_raw out="" yes='' no='' default="">
			<apt_soft name="" id="" ask="" value=""/>
		</apt_raw>
		<!--
		execute une commande apt-get install -y apt_soft[name]...
		en demandant confirmation pour chaque apt-soft
		yes : valeur de validation
		no : valeur de non
		dafault : valeur retourné par defaut
		
		id : le nom de la variable dans le dico install_var
		ask : question a afficher
		value : valeur de reponse, skip le raw_input si remplis
		entrez un noeud apt_soft avec l'attribut name contenant le nom du soft a installer
		-->
		<replace path="">
			<r old="" new=""/>
		</replace>
		<!--
		execute un string.replace(r[old],r[new]) sur toutes les lignes du fichiers avec tout les noeuds r
		old : chaine encoder en base64
		new : chaine encoder en base64
		-->
		<dir path=""/>
		<!--
		creer un dossier avec la valeur de path
		-->
		<file path="" mode="" content="">contenu</file>
		<!--
		creer un fichier avec la valeur de path
		le remplis avec le contenu entre balise
		mode : flag d'ouverture de fichier a,r,w...
		contenu : chaine encodée en base64
		-->
		<cmd out="">commande shell</cmd>
		<!--
		execute la commande shell entre les balise
		out : 0|1 redirection de la sortie. 1 si vide, redirige ma sortie
		commande shell : chaine encodée en base64
		-->
		<rm path="" type=""/>
		<!--
		retire sur le system de fichier
		path : chemin de l'element a retirer'
		type : file|dir fichier ou repertoire, fichier si vide
 		-->
		<cp from="" to="" r="" type=""/>
		<!--
		copy un fichier ou un dossier 
		from : chemin de depart
		to : chemin d'arriver
		r : 0|1 recursif si dossier (1 par defaut)
 		-->
		<msg>votre message</msg>
		<!--
		print le contenu entre les balise
		votre message  : chaine encodée en base64
		-->
	</soft>
</softs>
